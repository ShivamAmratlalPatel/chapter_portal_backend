"""
updated events table

Revision ID: b3c2204e90a5
Revises: a56327d85b6b
Created Date: 2024-10-22 01:06:27.642644+01:00

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "b3c2204e90a5"
down_revision = "a56327d85b6b"
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database schema and/or data, creating a new revision."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "event_sub_types",
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("event_type_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_date",
            sa.DateTime(timezone=True),
            server_default=sa.text(
                "timezone('Europe/London', timezone('Europe/London', CURRENT_TIMESTAMP))"
            ),
            nullable=False,
        ),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("last_modified_date", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["event_type_id"],
            ["event_types.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_event_sub_types_id"), "event_sub_types", ["id"], unique=False
    )
    op.add_column("events", sa.Column("event_sub_type_id", sa.UUID(), nullable=True))
    op.create_foreign_key(
        None, "events", "event_sub_types", ["event_sub_type_id"], ["id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema and/or data back to the previous revision."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "events", type_="foreignkey")
    op.drop_column("events", "event_sub_type_id")
    op.drop_index(op.f("ix_event_sub_types_id"), table_name="event_sub_types")
    op.drop_table("event_sub_types")
    # ### end Alembic commands ###


def merge_upgrade_ops() -> None:
    """Merge upgrade operations from multiple branches."""
    pass


def merge_downgrade_ops() -> None:
    """Merge downgrade operations from multiple branches."""
    pass
